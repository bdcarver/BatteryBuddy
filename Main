import Foundation



func shell(launchPath: String, arguments: [AnyObject]) -> String

{

    let task = NSTask()

    task.launchPath = launchPath

    task.arguments = arguments

    

    let pipe = NSPipe()

    task.standardOutput = pipe

    task.launch()

    

    let data = pipe.fileHandleForReading.readDataToEndOfFile()

    let output: String = NSString(data: data, encoding: NSUTF8StringEncoding)!

    

    return output

}









func checkyesno(arg: Array <Character>) -> Bool {

    if arg[0] == "Y" {

        return true

    }

    else if arg[0] == "N" {

        return false

    }

    else {

        print("Error Occured");

        return false

    }

}



func run(personality: String) {

    

    var x = shell("/usr/sbin/system_profiler", ["SPPowerDataType"]);

    var y = String(x)

    var words = split(x) {$0 == " "}

    var count = words.count

    

    var currentst = words[count-1]

    var letters = Array(currentst)

    var tracker = checkyesno(letters);

    

    let totData = y.componentsSeparatedByString("Full Charge Capacity (mAh): ")

    let totNo = split(totData[1]) {$0 == " "}

    let totBatteryString = totNo[0]

    let totBattery1 = totBatteryString.stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())

    let totBattery = totBattery1.toInt()



    

    var voice = "good news"

    var normalIn = "You make me happy"

    var normalOut = "Thanks for the charge"

    var lowIn = "You're a lifesaver"

    var lowOut = "I think I might die soon"



    if personality == "happy" {

        voice = "good news"

        normalIn = "You make me happy"

        normalOut = "Thanks for the power"

        lowIn = "You're a lifesaver"

        lowOut = "I think I might die soon"

    }

    else if personality == "sassy" {

        voice = "zarvox"

        normalIn = "I guess you're not completely useless"

        normalOut = "I need power for world domination"

        lowIn = "You thought you could kill me?"

        lowOut = "Hey, I needed that"

    }

    else if personality == "angry" {

        voice = "agnes"

        normalIn = "How dare you"

        normalOut = "How dare you"

        lowIn = "Good. I was about to go all Voldemort on you"

        lowOut = "Don't ruin your life"

    }

    else if personality == "creepy" {

        voice = "bruce"

        normalIn = "You electrify me"

        normalOut = "I like it when you put it in me"

        lowIn = "I knew we were meant to be together"

        lowOut = "You and me, not even death will do us part"

    }

    

    while true{

        var output = shell("/usr/sbin/system_profiler", ["SPPowerDataType"]);

        var words = output.componentsSeparatedByString("Connected: ")

        var currentst = words[1]

        

        var letters = Array(currentst)

        var state = checkyesno(letters)

        

        



        if state == true {

            if tracker == false {

                tracker = true

                var remData = x.componentsSeparatedByString("Charge Remaining (mAh): ")

                var remNo = split(remData[1]) {$0 == " "}

                var remBatteryString = remNo[0]

                var remBattery1 = remBatteryString.stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())

                var remBattery = remBattery1.toInt()

                print (remBattery)

                

                var percent = (remBattery)!*100 / (totBattery)!

                

                if percent > 10{

                    shell("/usr/bin/say",["-v" + voice, normalIn]);

                }

                else {

                    shell("/usr/bin/say",["-v" + voice, lowIn]);

                }

                

            }

        }

        

        if state == false {

            if tracker == true {

                tracker = false

                var remData = x.componentsSeparatedByString("Charge Remaining (mAh): ")

                var remNo = split(remData[1]) {$0 == " "}

                var remBatteryString = remNo[0]

                var remBattery1 = remBatteryString.stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())

                var remBattery = remBattery1.toInt()

                print (remBattery)

                

                var percent = (remBattery)!*100 / (totBattery)!

                

                if percent > 10{

                    shell("/usr/bin/say",["-v" + voice, normalOut]);

                }

                else {

                    shell("/usr/bin/say",["-v" + voice, lowOut]);

                }

                            }

        }

    }

}

